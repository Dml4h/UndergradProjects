C program that using pthreads to implement the search operations described below.

The program examines a search space looking for one or more 
solutions.  The file named evalfunc.o contains a function named evalfunc
which can be invoked to evaluate each node of the space.  Each node in
the space is identified by a unique integer id.  The first node in the 
space will always be node 0.

evalfunc has this prototype:

    double evalfunc(int nodeid, int *expandid1, int *expandid2)

The first argument is the integer id of the node you wish to have
evaluated.  The second and third args will be filled-in with the ids of
new nodes that can be expanded from the current one.  The values of the
expansion nodes are only valid if they are greater than 0.  Otherwise, 
the current node did not expand.  

The double return code lets you know if the current node is a solution
in the search space.  If it is greater than 1.0 then it is a solution.
Otherwise, the return code is a heuristic value of the node as a potential
path to a solution.

To run program:

    ./p3 T N   ## T threads ; T is the number of threads that you create
               ## N may be very large, searching entire space


Print each nodeid that is a solution, and the value of the solution.
At the end, print a termination message telling the total number of nodes
examined (this message should only be printed once, by the main thread).

